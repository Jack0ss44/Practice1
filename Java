Задача: Дан массив чисел {3, 6, 2, 8, 5, 10}. Разделите на чётные и нечётные.

```java
import java.util.ArrayList;

public class ArrayExample {
    public static void main(String[] args) {
        int[] arr = {3, 6, 2, 8, 5, 10};
        ArrayList<Integer> even = new ArrayList<>();
        ArrayList<Integer> odd = new ArrayList<>();

        for (int num : arr) {
            if (num % 2 == 0) even.add(num);
            else odd.add(num);
        }

        System.out.println("Чётные: " + even);
        System.out.println("Нечётные: " + odd);
    }
}


Задача: Создайте стек, добавьте 'a', 'b', 'c', извлеките верхний элемент.

import java.util.Stack;

public class StackExample {
    public static void main(String[] args) {
        Stack<String> stack = new Stack<>();
        stack.push("a");
        stack.push("b");
        stack.push("c");

        System.out.println("Стек до извлечения: " + stack);

        String top = stack.pop();
        System.out.println("Извлечённый элемент: " + top);
        System.out.println("Стек после извлечения: " + stack);
    }
}


Задача: Создайте связный список с элементами 1, 2, 3, добавьте 4 в конец.

class Node {
    int data;
    Node next;
    Node(int data) { this.data = data; this.next = null; }
}

class LinkedList {
    Node head;

    void append(int data) {
        Node newNode = new Node(data);
        if(head == null) { head = newNode; return; }
        Node last = head;
        while(last.next != null) last = last.next;
        last.next = newNode;
    }

    void printList() {
        Node current = head;
        while(current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
    }
}

public class LinkedListExample {
    public static void main(String[] args) {
        LinkedList ll = new LinkedList();
        ll.append(1);
        ll.append(2);
        ll.append(3);
        ll.append(4);
        ll.printList();
    }
}
